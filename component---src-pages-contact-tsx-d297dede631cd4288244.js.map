{"version":3,"file":"component---src-pages-contact-tsx-d297dede631cd4288244.js","mappings":"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","sources":["webpack://butterfly/./src/components/contact/contactUs.tsx","webpack://butterfly/./src/components/contact/useForm.tsx","webpack://butterfly/./src/components/contact/formValidation.tsx","webpack://butterfly/./src/components/contact/form.tsx","webpack://butterfly/./src/pages/contact.tsx"],"sourcesContent":["import React from 'react'\n\nfunction contactUs() {\n\n    return (\n        <section className='contact-us'>\n            <h1>צור קשר</h1>\n            <div className='title sub'>שלחו פנייה ונשמח לעמוד לרשותכם בכל נושא</div>\n            <div className='title m'>יש לכם שאלה דחופה?</div>\n            <div className='text s-title'>אנחנו זמינות עבורכם גם בטלפון:</div>\n            <div className='text'>\n                יעל - <a className=\"num\" href=\"tel:+972523338118\">052-3338118</a>\n            </div>\n            <div className='text'>\n                איילת - <a className=\"num\" href=\"tel:+97254-4404322\">054-4404322</a>\n            </div>\n            <div className='title m'>מייל</div>\n            <a className=\"email\" href=\"mailto: omer.butterflies@gmail.com\">omer.butterflies@gmail.com</a>\n        </section>\n    )\n}\n\nexport default contactUs","import { useState, useEffect } from 'react';\n\nexport interface FormInfo {\n  subject: string,\n  fullName: string,\n  email: string,\n  formContent: string\n}\n\nconst useForm = (callback: any, validate: any) => {\n\n  const [formInfo, setFormInfo] = useState<FormInfo>({\n    subject: '',\n    fullName: '',\n    email: '',\n    formContent: ''\n  })\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      callback();\n      console.log('submit');\n    }\n  }, [errors]);\n\n  const handleSubmit = (e: React.SyntheticEvent) => {\n    if (e) e.preventDefault();\n    setErrors(validate(formInfo));\n    setIsSubmitting(true);\n    console.log('submit func');\n\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>) => {\n    e.persist();\n    let [name, value] = ''\n    if (e.target.name && e.target.value) {\n      [name, value] = [e.target.name, e.target.value]\n    } else if (e.target.dataset.name && e.target.dataset.value) {\n      [name, value] = [e.target.dataset.name, e.target.dataset.value]\n    }\n    setFormInfo({ ...formInfo, [name]: value });\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    formInfo,\n    errors,\n  }\n};\n\nexport default useForm;","import { FormInfo } from './useForm';\n\ninterface Errors {\n    subject?: string,\n    fullName?: string,\n    email?: string,\n    formContent?: string\n}\n\nexport default function validate(formInfo: FormInfo) {\n    let errors: Errors = {};\n    const emailRx = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)+$/;\n    const textRx = /^[A-Za-z\\u0590-\\u05fe\\0-9\\-_!?@₪%():...,=\\n]+$/;\n    // const emailRx = /\\S+@\\S+\\.\\S+/;\n\n    if (!formInfo.subject) {\n        errors.subject = 'Subject is required';\n    }\n    if (!formInfo.fullName) {\n        errors.fullName = 'שדה חובה';\n    } else if (!textRx.test(formInfo.fullName)) {\n        errors.formContent = 'שימוש בתווים לא חוקיים כמו: <>{}^~;';\n    } else if (formInfo.fullName.length < 2) {\n        errors.fullName = 'Full Name must be 2 or more characters';\n    } else if (formInfo.fullName.length > 40) {\n        errors.fullName = 'Full Name must be 40 or less characters';\n    }\n    if (!formInfo.email) {\n        errors.email = 'שדה חובה';\n    } else if (!emailRx.test(formInfo.email)) {\n        errors.email = 'Email address is invalid';\n    }\n    if (!formInfo.formContent) {\n        errors.formContent = 'שדה חובה';\n    } else if (!textRx.test(formInfo.formContent)) {\n        errors.formContent = 'שימוש בתווים לא חוקיים כמו: <>{}^~;';\n    } else if (formInfo.formContent.length < 8) {\n        errors.formContent = 'Form Content must be 8 or more characters';\n    } else if (formInfo.formContent.length > 800) {\n        errors.formContent = 'Form Content must be 800 or less characters';\n    }\n    return errors;\n};","import React, { useRef, useState, useEffect } from 'react'\nimport useForm from \"./useForm\";\nimport validate from './formValidation';\n\nconst Form = () => {\n    const {\n        formInfo,\n        errors,\n        handleChange,\n        handleSubmit,\n    } = useForm(submitForm, validate);\n\n    function submitForm() {\n        console.log('No errors, submit callback called!');\n    }\n\n    const [dropdownTitle, setDropdownTitle] = useState('נושא הפנייה');\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n\n    const useOutsideClick = (callback: Function) => {\n        const ref = useRef<HTMLDivElement>(null);\n        useEffect(() => {\n            const handleClick = (e: MouseEvent) => {\n                if (isDropdownOpen && ref.current && !ref.current.contains(e.target as HTMLElement)) {\n                    callback();\n                    setIsDropdownOpen(!isDropdownOpen)\n                }\n            };\n            document.addEventListener('click', handleClick, true);\n            return () => {\n                document.removeEventListener('click', handleClick, true);\n            };\n        }, [ref, isDropdownOpen]);\n\n        return ref;\n    };\n\n    const ref = useOutsideClick(() =>\n        document.getElementsByClassName(\"dropdown\")[0].classList.toggle(\"active\"));\n\n    const toggleButton = (e: React.ChangeEvent<HTMLInputElement>) => {\n        var dropdown = document.getElementsByClassName(\"dropdown\")[0];\n        dropdown.classList.toggle(\"active\");\n        e.preventDefault();\n\n        if (e.target.type !== 'button') {\n            setDropdownTitle(e.target.innerText);\n            handleChange(e)\n        }\n        setIsDropdownOpen(!isDropdownOpen)\n    }\n\n    return (\n        <form className='form' onSubmit={handleSubmit}>\n            <div className='dropdown' ref={ref}>\n                <button type=\"button\" onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}>\n                    {dropdownTitle}\n                    <svg width=\"14\" height=\"8\" viewBox=\"0 0 14 8\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M7.12562 7.527C7.40092 7.5004 7.66124 7.38924 7.87087 7.2088L13.4981 2.38549C13.6382 2.27317 13.7543 2.13381 13.8396 1.97571C13.9248 1.81761 13.9774 1.64399 13.9941 1.46517C14.0109 1.28635 13.9916 1.10599 13.9373 0.934788C13.883 0.763591 13.7948 0.605058 13.678 0.468613C13.5612 0.332167 13.4182 0.220594 13.2574 0.140524C13.0967 0.0604543 12.9214 0.0135228 12.7422 0.00251778C12.5629 -0.00848722 12.3832 0.0166593 12.2139 0.0764632C12.0445 0.136267 11.8889 0.229507 11.7563 0.350642L6.99999 4.4287L2.24367 0.350642C2.11106 0.229506 1.95546 0.136267 1.7861 0.0764628C1.61675 0.0166589 1.4371 -0.0084877 1.25783 0.00251728C1.07856 0.0135223 0.903334 0.0604538 0.742564 0.140524C0.581796 0.220593 0.438769 0.332167 0.321977 0.468612C0.205185 0.605057 0.117022 0.76359 0.0627155 0.934787C0.00840945 1.10598 -0.0109196 1.28635 0.00586503 1.46517C0.0226506 1.64399 0.0752038 1.81761 0.160421 1.97571C0.245639 2.13381 0.361771 2.27316 0.501916 2.38549L6.12912 7.2088C6.26539 7.32595 6.42383 7.4145 6.59502 7.46916C6.76622 7.52383 6.94667 7.5435 7.12562 7.527Z\" fill=\"#FF121C\" />\n                    </svg>\n                </button>\n                <ul>\n                    <li onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}\n                        data-name='subject'\n                        data-value=\"donation\">תרומות</li>\n                    <li onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}\n                        data-name='subject'\n                        data-value=\"bracelets\">הצמידים של עומר</li>\n                    <li onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}\n                        data-name='subject'\n                        data-value=\"house\">הבית של עומר</li>\n                    <li onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}\n                        data-name='subject'\n                        data-value=\"house-available\">בדיקת זמינות לבית לפתרון דיור</li>\n                    <li onClick={(e: React.MouseEvent<HTMLElement>) => toggleButton(e as any)}\n                        data-name='else'\n                        data-value=\"house-available\">אחר</li>\n                </ul>\n            </div>\n            <input placeholder='שם מלא'\n                autoCapitalize='on'\n                type=\"text\"\n                value={formInfo.fullName || ''}\n                name='fullName'\n                minLength={2}\n                maxLength={20}\n                // required={true}\n                onChange={handleChange} />\n            <input placeholder='מייל'\n                // type=\"email\"\n                type=\"text\"\n                value={formInfo.email || ''}\n                name='email'\n                // minLength={2}\n                // maxLength={40}\n                // required={true}\n                onChange={handleChange} />\n            <textarea placeholder='מה תרצו להגיד לנו?'\n                value={formInfo.formContent || ''}\n                name='formContent'\n                // minLength={10}\n                // maxLength={650}\n                // required={true}\n                onChange={(e) => handleChange(e)} />\n            <input className='submit'\n                type=\"submit\"\n                value=\"שליחת טופס\" />\n        </form>\n    )\n}\n\nexport default Form","import * as React from \"react\"\nimport \"../styles/contact/index.scss\"\n\nimport Layout from \"../components/layout\"\nimport ContactUs from \"../components/contact/contactUs\"\nimport Form from \"../components/contact/form\"\n\n//  markup\nconst About = () => {\n\n  return (\n    <Layout>\n      <div className=\"contact-wrapper desktop-fill-page\">\n        {/* <div className=\"page-wrapper\"> */}\n        <ContactUs />\n        <Form />\n      </div>\n      {/* </div> */}\n    </Layout>\n  )\n}\n\nexport default About"],"names":["React","className","href","callback","validate","useState","subject","fullName","email","formContent","formInfo","setFormInfo","errors","setErrors","isSubmitting","setIsSubmitting","useEffect","Object","keys","length","console","log","handleChange","e","persist","name","value","target","dataset","handleSubmit","preventDefault","textRx","test","useForm","dropdownTitle","setDropdownTitle","isDropdownOpen","setIsDropdownOpen","ref","useRef","handleClick","current","contains","document","addEventListener","removeEventListener","useOutsideClick","getElementsByClassName","classList","toggle","toggleButton","type","innerText","onSubmit","onClick","width","height","viewBox","fill","xmlns","d","placeholder","autoCapitalize","minLength","maxLength","onChange","Layout","ContactUs","Form"],"sourceRoot":""}